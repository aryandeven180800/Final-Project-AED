/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FosterCare.ChildCare;

import Business.Adopter.Adopter;
import Business.Adopter.AdopterDirectory;
import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ChildCareOrganization;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ChildCareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12013
 */
public class AcquireChild extends javax.swing.JPanel {

    /**
     * Creates new form ChildCareWorkAreaJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    Organization organization;
    UserAccount account;
    ChildCareOrganization childCareOrganization;
    ChildDirectory childdirectory;
    Child child;
    EcoSystem business;
    AcquireChild panel;
    AdopterDirectory adopterdirectory;
    Adopter adopter;
    Role roler;
    Network network;

    public AcquireChild(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, ChildDirectory childdirectory, AdopterDirectory adopterdirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        this.childCareOrganization = (ChildCareOrganization) organization;
        this.childdirectory = childdirectory;
        this.adopterdirectory = adopterdirectory;
        this.enterprise = enterprise;
        processBtn.setEnabled(false);
        for (Network net : business.getNetworkList()) {
            for (Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (ent.equals(enterprise)) {
                    network = net;
                }
            }
        }
        populateWorkRequest();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workTable = new javax.swing.JTable();
        processBtn = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comments", "Pharmacy Name", "Child Care Admin", "Child ID", "Child Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 870, 130));

        processBtn.setBackground(new java.awt.Color(255, 255, 255));
        processBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        processBtn.setText("Process Request");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });
        add(processBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 370, 160, 33));

        btnAssign.setBackground(new java.awt.Color(255, 255, 255));
        btnAssign.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, 133, 33));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/kids 2.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 1010, 370));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ACQUIRE CHILD ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 320, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        int selectedRow = workTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        WorkRequest re = (WorkRequest) workTable.getValueAt(selectedRow, 0);
        //if (re.getStatus().equalsIgnoreCase("Acquired")) {
        if ("Acquired".equalsIgnoreCase(re.getStatus())) {
            JOptionPane.showMessageDialog(null, "Request already completed.");
            return;
        } else {
            for (Child ch : childdirectory.getChildList()) {
                if (ch.getChildId() == re.getChildId()) {
                    child = ch;
                }
            }
        }
        ProcessAcquireChild pccwr = new ProcessAcquireChild(userProcessContainer, organization, (ChildCareWorkRequest) re, childdirectory, child, account, business);
        this.userProcessContainer.add("ProcessChildCareWorkRequest", pccwr);
        CardLayout layout = (CardLayout) this.userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processBtnActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selectedRow = workTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        WorkRequest re = (WorkRequest) workTable.getValueAt(selectedRow, 0);
        //if (re.getStatus().equalsIgnoreCase("Acquired")) {
        if ("Acquired".equalsIgnoreCase(re.getStatus())) {
            JOptionPane.showMessageDialog(null, "Request already completed.");
            return;
        } else {
            re.setReceiver(account);
            re.setStatus("Pending with child care");
            populateWorkRequest();
            processBtn.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Request Assigned");
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    public void populateWorkRequest() {
        DefaultTableModel table = (DefaultTableModel) workTable.getModel();
        table.setRowCount(0);
        for (WorkRequest req : childCareOrganization.getWorkQueue().getWorkRequestList()) {
            if (req instanceof ChildCareWorkRequest) {
                ChildCareWorkRequest request = (ChildCareWorkRequest) req;
                if (request.isIsAcquiredReq()) {
                    Object[] row = new Object[table.getColumnCount()];
                    row[0] = req;
                    row[1] = req.getSender();
                    row[2] = req.getReceiver();
                    row[3] = req.getChildId();
                    row[4] = req.getChildName();
                    row[5] = req.getStatus();
                    table.addRow(row);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processBtn;
    private javax.swing.JTable workTable;
    // End of variables declaration//GEN-END:variables

}
