/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FundingFinanceRole;

import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FinanceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utils.CommonMail;
import Business.WorkQueue.DonorWorkRequest;
import Business.WorkQueue.EducationalHelpWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author snehaswaroop
 */
public class ViewAndProcessTransactionRecord extends javax.swing.JPanel {

    /**
     * Creates new form ViewRecord
     */
    
    JPanel userProcessContainer;
    UserAccount account;
    FinanceOrganization financeOrphanageOrganization;
    Enterprise enterprise;
    EcoSystem business;
    ChildDirectory childdirectory;
    int countApprove=0, countDeny=0, countPending=0; 
    
    public ViewAndProcessTransactionRecord(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, ChildDirectory childdirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.financeOrphanageOrganization = (FinanceOrganization) organization;
        this.enterprise = enterprise;
        this.childdirectory = childdirectory;
        this.business = business;
        btnProcess.setEnabled(false);
        populateDonorRequesttable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtComments = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANSACTION RECORD");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 32, 320, 20));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Child ID", "Child Name", "Remarks", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 870, 110));

        btnAssign.setText("Assign To Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 133, 33));

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 330, 133, 33));

        jLabel2.setText("Comments");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, -1, 30));

        txtComments.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, 220, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/finance.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 690, 620));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        Object statusval = jTable2.getValueAt(selectedRow, 6);
        DonorWorkRequest req = (DonorWorkRequest) jTable2.getValueAt(selectedRow, 0);
        if ("Received".equals(statusval) || "Assigned".equals(statusval)) {
            JOptionPane.showMessageDialog(null, "Request already processed");
        } else {
            req.setReceiver(account);
            req.setMessage("Payment processed");
            req.setStatus("Assigned");
            JOptionPane.showMessageDialog(null, "Request is assigned");
            populateDonorRequesttable();
            btnProcess.setEnabled(true);
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        Object statusval = jTable2.getValueAt(selectedRow, 6);
        DonorWorkRequest req = (DonorWorkRequest) jTable2.getValueAt(selectedRow, 0);
        if ("Received".equals(statusval)) {
            JOptionPane.showMessageDialog(null, "Request already processed");
        } else {
            req.setMessage(txtComments.getText());
            req.setStatus("Received");
            JOptionPane.showMessageDialog(null, "Request is processed");
            if (this.childdirectory != null && this.childdirectory.getChildList().size() > 0) {
                for (Child ch : this.childdirectory.getChildList()) {
                    if (req.getChildId() == ch.getChildId()) {
                        ch.setFinancialHelp(false);
                        break;
                    }
                }
            }
            for (WorkRequest request : business.getWorkQueue().getWorkRequestList()) {
            if (request.getChildId() == req.getChildId()) {
                if (request instanceof EducationalHelpWorkRequest) {
                    request.setStatus("Sponsored");
                }
            }
            }
            String subject = "Payment Receipt";
            String content = "Dear Sponsor, this is an acknowledgement receipt. We have recieved your payment. Thank you so much for your kind donation. Your caring support will make a great difference in the child's academic success. We hope that you will continue serving and make world a better place for children.";
            CommonMail.sendEmailMessage(req.getEmailId(), subject, content);
        }
        populateDonorRequesttable();
        txtComments.setText("");
    }//GEN-LAST:event_btnProcessActionPerformed

    public void populateDonorRequesttable() {
        DefaultTableModel dtms = (DefaultTableModel) jTable2.getModel();
        dtms.setRowCount(0);

        for (WorkRequest req : business.getWorkQueue().getWorkRequestList()) {
            if (req instanceof DonorWorkRequest) {
                Object[] row = new Object[dtms.getColumnCount()];
                req.setReceiver(account);
                row[0] = req;
                row[1] = req.getSender();
                row[2] = req.getReceiver();
                row[3] = req.getChildId();
                row[4] = req.getChildName();
                String remarks = ((DonorWorkRequest) req).getRemarks();
                row[5] = remarks;
                row[6] = req.getStatus();
                dtms.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtComments;
    // End of variables declaration//GEN-END:variables
}
